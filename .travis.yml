language: cpp
compiler:
  - gcc
  - clang
dist: xenial

sudo: true

env:
  global:
   - secure: "bmjUMvuD9qjQG/Q/wdnBJd2RoRCfZfSUD4Jip0hK0RZYoUIUHtePjT6L5sP1sScg7i86bZc3Ja5BJG/cv74PQCczeaWq1qsJLj6yKRdHYU1TJlUy7uqcK71K0PC7gWQUu7CGXVsrK0waPohwTCUfOvPeHBR9TF0lhf3zr9jvhLg="
  matrix:
   - DL_PLATFORM=linux_x86 DL_CONFIG=debug
   - DL_PLATFORM=linux_x86 DL_CONFIG=release
   - DL_PLATFORM=linux_x86 DL_CONFIG=sanitizer
   - DL_PLATFORM=linux_x86_64 DL_CONFIG=debug
   - DL_PLATFORM=linux_x86_64 DL_CONFIG=release
   - DL_PLATFORM=linux_x86_64 DL_CONFIG=sanitizer
   - DL_PLATFORM=linux_x86_64 DL_CONFIG=coverage

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq libc6-dev-i386 g++-multilib
  - pip install --user cpp-coveralls

install:
  - ./script/bootstrap.sh

script:
  - |
    if [ $DL_CONFIG = "sanitizer" ] && [ $CC = "clang" ] && [ $DL_PLATFORM = "linux_x86" ]; then
      exit
    fi
    local/bam/bam compiler=$CC platform=$DL_PLATFORM config=$DL_CONFIG -r sc
    local/bam/bam compiler=$CC platform=$DL_PLATFORM config=$DL_CONFIG -r sc test

after_success:
  - |
    if [ $DL_CONFIG = "coverage" ] && [ $CC = "gcc" ]; then
      coveralls --exclude external --exclude local/bam --gcov-options '\-lp'
    fi

addons:
  coverity_scan:
    project:
      name: "wc-duck/datalibrary"
      description: "Build submitted via Travis CI"
    notification_email: fredrik.kihlander@gmail.com
    build_command_prepend: "local/bam/bam compiler=$CC platform=linux_x86_64 config=debug -r sc -c"
    build_command:   "local/bam/bam compiler=$CC platform=linux_x86_64 config=debug -r sc"
    branch_pattern: coverity_scan

